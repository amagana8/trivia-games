syntax = "proto3";

package gameRoom;

option go_package = "github.com/amagana8/trivia-games/backend/pkg/pb";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service GameRoomService {
    rpc CreateGameRoom(CreateGameRoomRequest) returns (GameRoomState);
    rpc JoinGameRoom(JoinGameRoomRequest) returns (stream GameRoomState);
    rpc StartGame(StartGameRequest) returns (google.protobuf.Empty);
    rpc SelectQuestion(SelectQuestionRequest) returns (google.protobuf.Empty);
    rpc StartBuzzer(StartBuzzerRequest) returns (google.protobuf.Empty);
    rpc PlayerBuzzer(stream BuzzerUpdate) returns (google.protobuf.Empty);
    rpc JudgeAnswer(JudgeAnswerRequest) returns (google.protobuf.Empty);
}


message CreateGameRoomRequest {
    string hostId = 1;
}


message JoinGameRoomRequest {
    string userId = 1;
    string gameRoomId = 2;
}

message StartGameRequest {
    string hostId = 1;
    string gameRoomId = 2;
    string gameId = 3;
    map<string, int32> questionMap = 4;
}

enum GameStatus {
    UNKNOWN = 0;
    LOBBY = 1;
    QUESTION_SELECT = 2;
    BUZZING = 3;
    ANSWERING = 4;
    GAME_OVER = 5;
}

message GameRoomState {
    string gameRoomId = 1;
    string hostId = 2;
    string gameId = 3;
    string currentQuestion = 4;
    GameStatus status = 5;
    repeated string completedQuestions = 6;
    map<string, int32> playerScores = 7;
    string currentPlayer = 8;
    repeated string allowedPlayers = 9;
}

message SelectQuestionRequest {
    string gameRoomId = 1;
    string hostId = 2;
    string questionId = 3;
}

message StartBuzzerRequest {
    string gameRoomId = 1;
    string hostId = 2;
}


message BuzzerUpdate {
    string gameRoomId = 1;
    string playerId = 2;
    google.protobuf.Timestamp timeElapsed = 3;
    bool isBuzzed = 4;
}

message JudgeAnswerRequest {
    string gameRoomId = 1;
    string hostId = 2;
    string playerId = 3;
    bool isCorrect = 4;
}
